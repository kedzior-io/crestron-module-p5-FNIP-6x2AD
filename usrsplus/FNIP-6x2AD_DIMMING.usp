/****************************************************************/
/*																*/
/*	Title: FNIP-6x2AD_DIMMING									*/
/*	Description: Part of the Crestron module responsable for	*/
/*  handling dimming                                            */
/*                                                              */
/* 	Author: Klaatu Verata Necto (klaatuveratanecto@gmail.com)	*/
/* 	Web: klaatuveratanecto.com	 								*/
/* 	Date: 08/11/2016 											*/
/*																*/
/****************************************************************/

#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#ENCODING_ASCII

// Store levels 
String_INPUT ch1_Level[3], ch2_Level[3], ch3_Level[3], ch4_Level[3], ch5_Level[3], ch6_Level[3], _SKIP_;

// Digital Input when button is hold 
digital_INPUT _SKIP_, Ch_1_Hold, Ch_2_Hold, Ch_3_Hold, Ch_4_Hold, Ch_5_Hold, Ch_6_Hold,_SKIP_,Ch_1_Up_Hold,Ch_2_Up_Hold, Ch_3_Up_Hold, Ch_4_Up_Hold, Ch_5_Up_Hold, Ch_6_Up_Hold,_SKIP_,Ch_1_Down_Hold,Ch_2_Down_Hold, Ch_3_Down_Hold, Ch_4_Down_Hold, Ch_5_Down_Hold, Ch_6_Down_Hold,_SKIP_;

string_INPUT Ch1_Dim_Level[3], Ch2_Dim_Level[3], Ch3_Dim_Level[3], Ch4_Dim_Level[3], Ch5_Dim_Level[3], Ch6_Dim_Level[3];

       
// String output 
String_OUTPUT TX;
                 
// Stores channel level converted to integer (for comparison)
INTEGER ch1,ch2,ch3,ch4,ch5,ch6;

// Memory for state: 1 = dim_up, 0 = dim_down
// When you press and hold "Ch_1_Hold" it will dim UP until release of the button. 
// Let's say you arrived from 0 to 30%. 
// When you press and hold "Ch_1_Hold" again it will continue to dim UP until you either release or arrive to 100%
// and the other way around!

INTEGER ch1_state, ch2_state, ch3_state, ch4_state, ch5_state, ch6_state;

/* ----------------------------------- Dimming up ---------------------------------------------------------------------- */

PUSH Ch_1_Up_Hold
{
	TX = "FN,LEV,1,100\r\n";	
}
  
RELEASE Ch_1_Up_Hold
{
	TX = "FN,STOP,1\r\n"; 
}


PUSH Ch_2_Up_Hold
{
	TX = "FN,LEV,2,100\r\n";	
}
  
RELEASE Ch_2_Up_Hold
{
	TX = "FN,STOP,2\r\n"; 
}


PUSH Ch_3_Up_Hold
{
	TX = "FN,LEV,3,100\r\n";	
}
  
RELEASE Ch_3_Up_Hold
{
	TX = "FN,STOP,3\r\n"; 
}

    
PUSH Ch_4_Up_Hold
{
	TX = "FN,LEV,4,100\r\n";	
}
  
RELEASE Ch_4_Up_Hold
{
	TX = "FN,STOP,4\r\n"; 
}
 

PUSH Ch_5_Up_Hold
{
	TX = "FN,LEV,5,100\r\n";	
}
  
RELEASE Ch_5_Up_Hold
{
	TX = "FN,STOP,5\r\n"; 
}
 

PUSH Ch_6_Up_Hold
{
	TX = "FN,LEV,6,100\r\n";	
}
  
RELEASE Ch_6_Up_Hold
{
	TX = "FN,STOP,6\r\n"; 
}



/* ----------------------------------- Dimming down--------------------------------------------------------------------- */

PUSH Ch_1_Down_Hold
{
	TX = "FN,LEV,1,0\r\n";	
}
  
RELEASE Ch_1_Down_Hold
{
	TX = "FN,STOP,1\r\n"; 
}


PUSH Ch_2_Down_Hold
{
	TX = "FN,LEV,2,0\r\n";	
}
  
RELEASE Ch_2_Down_Hold
{
	TX = "FN,STOP,2\r\n"; 
}


PUSH Ch_3_Down_Hold
{
	TX = "FN,LEV,3,0\r\n";	
}
  
RELEASE Ch_3_Down_Hold
{
	TX = "FN,STOP,3\r\n"; 
}

    
PUSH Ch_4_Down_Hold
{
	TX = "FN,LEV,4,0\r\n";	
}
  
RELEASE Ch_4_Down_Hold
{
	TX = "FN,STOP,4\r\n"; 
}
 

PUSH Ch_5_Down_Hold
{
	TX = "FN,LEV,5,0\r\n";	
}
  
RELEASE Ch_5_Down_Hold
{
	TX = "FN,STOP,5\r\n"; 
}
 

PUSH Ch_6_Down_Hold
{
	TX = "FN,LEV,6,0\r\n";	
}
  
RELEASE Ch_6_Down_Hold
{
	TX = "FN,STOP,6\r\n"; 
}
             

/* ----------------------------------- One button dimming up/down on hold  --------------------------------------------- */

//Triggered when signal goes high 
PUSH Ch_1_Hold
{
	// get channel level and convert it to string for comparison 
	ch1 = ATOI(ch1_Level);
                          
	// check if level is 0
	if(ch1 = 0)
	{
		// set state to dim_up
		ch1_state = 1;
	}

	// check if level is 100
	if( ch1 = 100)
	{
		// set state to dim_down
		ch1_state = 0;
	}
 
	// depending on the state dim up or down
	if(ch1_state = 1) 
	{
		TX = "FN,LEV,1,100\r\n";
		ch1_state = 1;
	} 
	else
	{
		TX = "FN,LEV,1,0\r\n";
		ch1_state = 0;
	}	
}
  
//Triggered when signal goes low 
RELEASE Ch_1_Hold
{
	TX = "FN,STOP,1\r\n"; 
}


// and so on ...
PUSH Ch_2_Hold

{
	ch2 = ATOI(ch2_Level);

	if(ch2 = 0)
	{
		ch2_state = 1;
	}

	if( ch2 = 100)
	{
		ch2_state = 0;
	}
 
	if(ch2_state = 1) 
	{
		TX = "FN,LEV,2,100\r\n";
		ch1_state = 1;
	} 
	else
	{
		TX = "FN,LEV,2,0\r\n";
		ch2_state = 0;
	}	
}

RELEASE Ch_2_Hold
{
	TX = "FN,STOP,2\r\n"; 
}


PUSH Ch_3_Hold

{
	ch3 = ATOI(ch3_Level);

	if(ch3 = 0)
	{
		ch3_state = 1;
	}

	if( ch3 = 100)
	{
		ch3_state = 0;
	}
 
	if(ch3_state = 1) 
	{
		TX = "FN,LEV,3,100\r\n";
		ch1_state = 1;
	} 
	else
	{
		TX = "FN,LEV,3,0\r\n";
		ch3_state = 0;
	}	
}

RELEASE Ch_3_Hold
{
	TX = "FN,STOP,3\r\n"; 
}


PUSH Ch_4_Hold

{
	ch4 = ATOI(ch4_Level);

	if(ch4 = 0)
	{
		ch4_state = 1;
	}

	if( ch4 = 100)
	{
		ch4_state = 0;
	}
 
	if(ch4_state = 1) 
	{
		TX = "FN,LEV,4,100\r\n";
		ch1_state = 1;
	} 
	else
	{
		TX = "FN,LEV,4,0\r\n";
		ch4_state = 0;
	}
	
}

RELEASE Ch_4_Hold
{
	TX = "FN,STOP,4\r\n"; 
}
      

PUSH Ch_5_Hold

{
	ch5 = ATOI(ch5_Level);

	if(ch5 = 0)
	{
		ch5_state = 1;
	}

	if( ch5 = 100)
	{
		ch5_state = 0;
	}
 
	if(ch5_state = 1) 
	{
		TX = "FN,LEV,5,100\r\n";
		ch5_state = 1;
	} 
	else
	{
		TX = "FN,LEV,5,0\r\n";
		ch5_state = 0;
	}	
}

RELEASE Ch_5_Hold
{
	TX = "FN,STOP,5\r\n"; 
}
     

PUSH Ch_6_Hold

{
	ch6 = ATOI(ch6_Level);

	if(ch6 = 0)
	{
		ch6_state = 1;
	}

	if( ch6 = 100)
	{
		ch6_state = 0;
	}
 
	if(ch6_state = 1) 
	{
		TX = "FN,LEV,6,100\r\n";
		ch6_state = 1;
	} 
	else
	{
		TX = "FN,LEV,6,0\r\n";
		ch6_state = 0;
	}
}

RELEASE Ch_6_Hold
{

	TX = "FN,STOP,6\r\n"; 
}

/* ----------------------------------- Dimming by setting level  --------------------------------------------- */

CHANGE Ch1_Dim_Level
{
	TX = "FN,LEV,1,"+ Ch1_Dim_Level+"\r\n";
	ch1_Level = Ch1_Dim_Level;
}

CHANGE Ch2_Dim_Level
{
	TX = "FN,LEV,2,"+ Ch2_Dim_Level+"\r\n";
	ch2_Level = Ch2_Dim_Level;
}

CHANGE Ch3_Dim_Level
{
	TX = "FN,LEV,3,"+ Ch3_Dim_Level+"\r\n";
	ch3_Level = Ch3_Dim_Level;
}

CHANGE Ch4_Dim_Level
{
	TX = "FN,LEV,4,"+ Ch4_Dim_Level+"\r\n";
	ch4_Level = Ch4_Dim_Level;

}
CHANGE Ch5_Dim_Level
{
	TX = "FN,LEV,5,"+ Ch5_Dim_Level +"\r\n";
	ch5_Level = Ch5_Dim_Level;
}
CHANGE Ch6_Dim_Level
{
	TX = "FN,LEV,6,"+ Ch6_Dim_Level +"\r\n";
	ch6_Level = Ch6_Dim_Level;
}

Function Main()
{
	ch1_state = 1;
	ch2_state = 1;
	ch3_state = 1;
	ch4_state = 1;
	ch5_state = 1;
	ch6_state = 1;
}
